<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PizzaShopDataSet" targetNamespace="http://tempuri.org/PizzaShopDataSet.xsd" xmlns:mstns="http://tempuri.org/PizzaShopDataSet.xsd" xmlns="http://tempuri.org/PizzaShopDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PizzaShopConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PizzaShopConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ProjectTeam07PizzaShop.Properties.Settings.GlobalReference.Default.PizzaShopConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OrdersTableAdapter" GeneratorDataComponentClassName="OrdersTableAdapter" Name="Orders" UserDataComponentName="OrdersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzaShopConnectionString (Settings)" DbObjectName="PizzaShop.dbo.Orders" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Orders] WHERE (([OrderID] = @Original_OrderID) AND ([CustomerName] = @Original_CustomerName) AND ([Size] = @Original_Size) AND ([PaymentMethod] = @Original_PaymentMethod) AND ([Price] = @Original_Price))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OrderID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CustomerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CustomerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Size" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Size" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PaymentMethod" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PaymentMethod" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Orders] ([CustomerName], [Toppings], [Size], [PaymentMethod], [Price]) VALUES (@CustomerName, @Toppings, @Size, @PaymentMethod, @Price);
SELECT OrderID, CustomerName, Toppings, Size, PaymentMethod, Price FROM Orders WHERE (OrderID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CustomerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CustomerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Toppings" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Toppings" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Size" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Size" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PaymentMethod" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PaymentMethod" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT OrderID, CustomerName, Toppings, Size, PaymentMethod, Price FROM dbo.Orders</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Orders] SET [CustomerName] = @CustomerName, [Toppings] = @Toppings, [Size] = @Size, [PaymentMethod] = @PaymentMethod, [Price] = @Price WHERE (([OrderID] = @Original_OrderID) AND ([CustomerName] = @Original_CustomerName) AND ([Size] = @Original_Size) AND ([PaymentMethod] = @Original_PaymentMethod) AND ([Price] = @Original_Price));
SELECT OrderID, CustomerName, Toppings, Size, PaymentMethod, Price FROM Orders WHERE (OrderID = @OrderID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CustomerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CustomerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Toppings" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Toppings" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Size" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Size" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PaymentMethod" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PaymentMethod" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OrderID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OrderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CustomerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CustomerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Size" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Size" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PaymentMethod" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PaymentMethod" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="OrderID" ColumnName="OrderID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@OrderID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="OrderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="OrderID" DataSetColumn="OrderID" />
              <Mapping SourceColumn="CustomerName" DataSetColumn="CustomerName" />
              <Mapping SourceColumn="Toppings" DataSetColumn="Toppings" />
              <Mapping SourceColumn="Size" DataSetColumn="Size" />
              <Mapping SourceColumn="PaymentMethod" DataSetColumn="PaymentMethod" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SizesTableAdapter" GeneratorDataComponentClassName="SizesTableAdapter" Name="Sizes" UserDataComponentName="SizesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzaShopConnectionString (Settings)" DbObjectName="PizzaShop.dbo.Sizes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Sizes] WHERE (([SizeID] = @Original_SizeID) AND ([Size] = @Original_Size) AND ([PizzaPrice] = @Original_PizzaPrice))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SizeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SizeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Size" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Size" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_PizzaPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="PizzaPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Sizes] ([Size], [PizzaPrice]) VALUES (@Size, @PizzaPrice);
SELECT SizeID, Size, PizzaPrice FROM Sizes WHERE (SizeID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Size" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Size" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@PizzaPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="PizzaPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SizeID, Size, PizzaPrice FROM dbo.Sizes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Sizes] SET [Size] = @Size, [PizzaPrice] = @PizzaPrice WHERE (([SizeID] = @Original_SizeID) AND ([Size] = @Original_Size) AND ([PizzaPrice] = @Original_PizzaPrice));
SELECT SizeID, Size, PizzaPrice FROM Sizes WHERE (SizeID = @SizeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Size" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Size" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@PizzaPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="PizzaPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SizeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SizeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Size" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Size" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_PizzaPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="PizzaPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="SizeID" ColumnName="SizeID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SizeID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SizeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SizeID" DataSetColumn="SizeID" />
              <Mapping SourceColumn="Size" DataSetColumn="Size" />
              <Mapping SourceColumn="PizzaPrice" DataSetColumn="PizzaPrice" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ToppingsTableAdapter" GeneratorDataComponentClassName="ToppingsTableAdapter" Name="Toppings" UserDataComponentName="ToppingsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PizzaShopConnectionString (Settings)" DbObjectName="PizzaShop.dbo.Toppings" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Toppings] WHERE (([ToppingID] = @Original_ToppingID) AND ([ToppingName] = @Original_ToppingName) AND ([ToppingPrice] = @Original_ToppingPrice))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ToppingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ToppingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ToppingName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ToppingName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_ToppingPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="ToppingPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Toppings] ([ToppingName], [ToppingPrice]) VALUES (@ToppingName, @ToppingPrice);
SELECT ToppingID, ToppingName, ToppingPrice FROM Toppings WHERE (ToppingID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ToppingName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ToppingName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@ToppingPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="ToppingPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ToppingID, ToppingName, ToppingPrice FROM dbo.Toppings</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Toppings] SET [ToppingName] = @ToppingName, [ToppingPrice] = @ToppingPrice WHERE (([ToppingID] = @Original_ToppingID) AND ([ToppingName] = @Original_ToppingName) AND ([ToppingPrice] = @Original_ToppingPrice));
SELECT ToppingID, ToppingName, ToppingPrice FROM Toppings WHERE (ToppingID = @ToppingID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ToppingName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ToppingName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@ToppingPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="ToppingPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ToppingID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ToppingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ToppingName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ToppingName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_ToppingPrice" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="ToppingPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ToppingID" ColumnName="ToppingID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ToppingID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ToppingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ToppingID" DataSetColumn="ToppingID" />
              <Mapping SourceColumn="ToppingName" DataSetColumn="ToppingName" />
              <Mapping SourceColumn="ToppingPrice" DataSetColumn="ToppingPrice" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PizzaShopDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="PizzaShopDataSet" msprop:Generator_UserDSName="PizzaShopDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Orders" msprop:Generator_TableClassName="OrdersDataTable" msprop:Generator_TableVarName="tableOrders" msprop:Generator_TablePropName="Orders" msprop:Generator_RowDeletingName="OrdersRowDeleting" msprop:Generator_RowChangingName="OrdersRowChanging" msprop:Generator_RowEvHandlerName="OrdersRowChangeEventHandler" msprop:Generator_RowDeletedName="OrdersRowDeleted" msprop:Generator_UserTableName="Orders" msprop:Generator_RowChangedName="OrdersRowChanged" msprop:Generator_RowEvArgName="OrdersRowChangeEvent" msprop:Generator_RowClassName="OrdersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OrderID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnOrderID" msprop:Generator_ColumnPropNameInRow="OrderID" msprop:Generator_ColumnPropNameInTable="OrderIDColumn" msprop:Generator_UserColumnName="OrderID" type="xs:int" />
              <xs:element name="CustomerName" msprop:Generator_ColumnVarNameInTable="columnCustomerName" msprop:Generator_ColumnPropNameInRow="CustomerName" msprop:Generator_ColumnPropNameInTable="CustomerNameColumn" msprop:Generator_UserColumnName="CustomerName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Toppings" msprop:Generator_ColumnVarNameInTable="columnToppings" msprop:Generator_ColumnPropNameInRow="Toppings" msprop:Generator_ColumnPropNameInTable="ToppingsColumn" msprop:Generator_UserColumnName="Toppings" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Size" msprop:Generator_ColumnVarNameInTable="columnSize" msprop:Generator_ColumnPropNameInRow="Size" msprop:Generator_ColumnPropNameInTable="SizeColumn" msprop:Generator_UserColumnName="Size">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PaymentMethod" msprop:Generator_ColumnVarNameInTable="columnPaymentMethod" msprop:Generator_ColumnPropNameInRow="PaymentMethod" msprop:Generator_ColumnPropNameInTable="PaymentMethodColumn" msprop:Generator_UserColumnName="PaymentMethod">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Sizes" msprop:Generator_TableClassName="SizesDataTable" msprop:Generator_TableVarName="tableSizes" msprop:Generator_TablePropName="Sizes" msprop:Generator_RowDeletingName="SizesRowDeleting" msprop:Generator_RowChangingName="SizesRowChanging" msprop:Generator_RowEvHandlerName="SizesRowChangeEventHandler" msprop:Generator_RowDeletedName="SizesRowDeleted" msprop:Generator_UserTableName="Sizes" msprop:Generator_RowChangedName="SizesRowChanged" msprop:Generator_RowEvArgName="SizesRowChangeEvent" msprop:Generator_RowClassName="SizesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SizeID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSizeID" msprop:Generator_ColumnPropNameInRow="SizeID" msprop:Generator_ColumnPropNameInTable="SizeIDColumn" msprop:Generator_UserColumnName="SizeID" type="xs:int" />
              <xs:element name="Size" msprop:Generator_ColumnVarNameInTable="columnSize" msprop:Generator_ColumnPropNameInRow="Size" msprop:Generator_ColumnPropNameInTable="SizeColumn" msprop:Generator_UserColumnName="Size">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PizzaPrice" msprop:Generator_ColumnVarNameInTable="columnPizzaPrice" msprop:Generator_ColumnPropNameInRow="PizzaPrice" msprop:Generator_ColumnPropNameInTable="PizzaPriceColumn" msprop:Generator_UserColumnName="PizzaPrice" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Toppings" msprop:Generator_TableClassName="ToppingsDataTable" msprop:Generator_TableVarName="tableToppings" msprop:Generator_TablePropName="Toppings" msprop:Generator_RowDeletingName="ToppingsRowDeleting" msprop:Generator_RowChangingName="ToppingsRowChanging" msprop:Generator_RowEvHandlerName="ToppingsRowChangeEventHandler" msprop:Generator_RowDeletedName="ToppingsRowDeleted" msprop:Generator_UserTableName="Toppings" msprop:Generator_RowChangedName="ToppingsRowChanged" msprop:Generator_RowEvArgName="ToppingsRowChangeEvent" msprop:Generator_RowClassName="ToppingsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ToppingID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnToppingID" msprop:Generator_ColumnPropNameInRow="ToppingID" msprop:Generator_ColumnPropNameInTable="ToppingIDColumn" msprop:Generator_UserColumnName="ToppingID" type="xs:int" />
              <xs:element name="ToppingName" msprop:Generator_ColumnVarNameInTable="columnToppingName" msprop:Generator_ColumnPropNameInRow="ToppingName" msprop:Generator_ColumnPropNameInTable="ToppingNameColumn" msprop:Generator_UserColumnName="ToppingName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ToppingPrice" msprop:Generator_ColumnVarNameInTable="columnToppingPrice" msprop:Generator_ColumnPropNameInRow="ToppingPrice" msprop:Generator_ColumnPropNameInTable="ToppingPriceColumn" msprop:Generator_UserColumnName="ToppingPrice" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Orders" />
      <xs:field xpath="mstns:OrderID" />
    </xs:unique>
    <xs:unique name="Sizes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Sizes" />
      <xs:field xpath="mstns:SizeID" />
    </xs:unique>
    <xs:unique name="Toppings_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Toppings" />
      <xs:field xpath="mstns:ToppingID" />
    </xs:unique>
  </xs:element>
</xs:schema>